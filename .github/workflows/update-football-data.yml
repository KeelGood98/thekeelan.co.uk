name: Update site data (table + badges + MUFC fixtures)

on:
  schedule:
    # Runs every day at 06:00 UTC (adjust if you like)
    - cron: "0 6 * * *"
  workflow_dispatch:

# Prevent two runs from committing at the same time
concurrency:
  group: update-football-data
  cancel-in-progress: false

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # This is the new script you created in /scripts
      - name: Build table.json (20 teams) + badges.json
        run: python scripts/update_table.py

      # Your existing script that writes assets/fixtures.json
      - name: Build fixtures.json
        run: python update_fixtures.py

      # Optional: a human-readable stamp you can show on the site if you like
      - name: Touch update stamp
        run: |
          mkdir -p assets
          date -u +"%Y-%m-%dT%H:%M:%SZ" > assets/update_stamp.txt

      - name: Commit & push assets
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add assets/table.json assets/badges.json assets/fixtures.json assets/update_stamp.txt

          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "chore: refresh table+badges+fixtures $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            # Rebase just in case another job touched the branch
            git pull --rebase origin "${GITHUB_REF_NAME:-main}" || true
            git push
          fi
