name: Update extras (weather + Steam specials)

on:
  schedule:
    - cron: "0 */3 * * *"   # every 3 hours
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Build extras assets
        run: |
          python - <<'PY'
          import json, time, urllib.request, sys, os

          os.makedirs("assets", exist_ok=True)

          def fetch(url, timeout=30):
            req = urllib.request.Request(url, headers={"User-Agent":"KeelBot/1.0"})
            with urllib.request.urlopen(req, timeout=timeout) as r:
              return r.read()

          # --- Leeds weather via Open-Meteo ---
          try:
            wx_url = ("https://api.open-meteo.com/v1/forecast"
                      "?latitude=53.8008&longitude=-1.5491"
                      "&current=temperature_2m,apparent_temperature,is_day,weather_code,wind_speed_10m"
                      "&daily=weather_code,temperature_2m_max,temperature_2m_min"
                      "&timezone=Europe%2FLondon")
            wx = json.loads(fetch(wx_url).decode("utf-8"))
            wx["updated"] = int(time.time()*1000)
            wx["location"] = "Leeds, UK"
            with open("assets/weather.json","w") as f: json.dump(wx, f)
            print("Wrote assets/weather.json")
          except Exception as e:
            print("weather error:", e, file=sys.stderr)

          # --- Steam specials/discounts (global featured categories) ---
          # We'll keep only meaningful top deals with price + discount
          try:
            feat = json.loads(fetch("https://store.steampowered.com/api/featuredcategories/?cc=GB").decode("utf-8"))
            specials = feat.get("specials", {}).get("items", []) or []
            deals = []
            for d in specials:
              # keep top 20 max
              if len(deals) >= 20: break
              # ensure we have a title & discount
              if not d.get("name"): continue
              disc = int(d.get("discount_percent") or 0)
              if disc <= 0: continue
              deals.append({
                "title": d["name"],
                "discount_percent": disc,
                "final_price": d.get("final_price"),
                "original_price": d.get("original_price"),
                "steam_appid": d.get("id"),
                "url": f"https://store.steampowered.com/app/{d.get('id')}/" if d.get("id") else None,
                "capsule_image": d.get("capsule_image")
              })
            out = {"updated": int(time.time()*1000), "deals": deals}
            with open("assets/steam_deals.json","w") as f: json.dump(out, f)
            print("Wrote assets/steam_deals.json (", len(deals), "deals )")
          except Exception as e:
            print("steam specials error:", e, file=sys.stderr)
          PY

      - name: Commit and push
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add assets/weather.json assets/steam_deals.json
          git commit -m "chore: refresh extras (weather + steam specials) $(date -u +'%Y-%m-%dT%H:%M:%SZ')" || echo "No changes"
          git push
