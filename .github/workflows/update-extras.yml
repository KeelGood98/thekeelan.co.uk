name: Update extras (weather + steam specials)

on:
  schedule:
    - cron: "*/120 * * * *"   # every 2 hours
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Build weather.json + steam_specials.json
        run: |
          python - <<'PY'
          import json, time, urllib.request, os

          os.makedirs("assets", exist_ok=True)

          def fetch(url, to=30):
            req = urllib.request.Request(url, headers={"User-Agent":"gh-actions"})
            with urllib.request.urlopen(req, timeout=to) as r:
              return r.read()

          # Leeds weather (Open-Meteo, no key)
          try:
            wx_url=("https://api.open-meteo.com/v1/forecast"
                    "?latitude=53.8008&longitude=-1.5491"
                    "&current=temperature_2m,apparent_temperature,is_day,weather_code,wind_speed_10m"
                    "&daily=weather_code,temperature_2m_max,temperature_2m_min"
                    "&timezone=Europe%2FLondon")
            wx = json.loads(fetch(wx_url).decode("utf-8"))
            wx["updated"] = int(time.time()*1000)
            wx["location"] = "Leeds, UK"
            with open("assets/weather.json","w") as f: json.dump(wx,f)
            print("Wrote assets/weather.json")
          except Exception as e:
            print("weather failed:", e)

          # Steam Specials â€“ Steam's public "featuredcategories" endpoint
          try:
            sc = json.loads(fetch("https://store.steampowered.com/api/featuredcategories/?l=en&cc=GB").decode("utf-8"))
            items = (sc.get("specials",{}) or {}).get("items",[]) or []
            out=[]
            for it in items:
              if not it.get("discounted"): 
                continue
              out.append({
                "id": it.get("id"),
                "name": it.get("name") or it.get("title") or "",
                "discount_percent": it.get("discount_percent",0),
                "original_price": it.get("original_price",0),
                "final_price": it.get("final_price",0),
                "image": it.get("header_image") or it.get("small_capsule_image") or it.get("large_capsule_image"),
                "url": f"https://store.steampowered.com/app/{it.get('id','')}/"
              })
            with open("assets/steam_specials.json","w") as f: json.dump({"updated": int(time.time()*1000), "items": out}, f)
            print("Wrote assets/steam_specials.json", len(out), "items")
          except Exception as e:
            print("steam specials failed:", e)
          PY

      - name: Commit & push
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add assets/weather.json assets/steam_specials.json
          git commit -m "chore: refresh extras $(date -u +'%Y-%m-%dT%H:%M:%SZ')" || echo "No changes"
          git push
